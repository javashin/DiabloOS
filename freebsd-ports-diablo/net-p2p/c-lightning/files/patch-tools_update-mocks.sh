--- tools/update-mocks.sh.orig	2019-12-13 20:01:11 UTC
+++ tools/update-mocks.sh
@@ -12,20 +12,31 @@ trap 'mv $BASE.old $FILE; rm -f $BASE.*' EXIT
 START=$(grep -F -n '/* AUTOGENERATED MOCKS START */' "$FILE" | cut -d: -f1)
 END=$(grep -F -n '/* AUTOGENERATED MOCKS END */' "$FILE" | cut -d: -f1)
 
+function make_binary() {
+    $MAKE "${FILE/%.c/}" 2> "${BASE}.err" >/dev/null
+}
+
 if [ -n "$START" ]; then
     mv "$FILE" "${BASE}.old"
     echo "${FILE}:"
     head -n "$START" "${BASE}.old" > "$FILE"
     tail -n +"$END" "${BASE}.old" >> "$FILE"
     # Try to make binary.
-    if ! $MAKE "${FILE/%.c/}" 2> "${BASE}.err" >/dev/null; then
+    if ! make_binary; then
+	# Some linkers (e.g. LLVM's one) don't print all errors. If this is the
+	# case, then re-run, asking them to do so. Search for something like
+	# this in the output:
+	# ld: error: too many errors emitted, stopping now (use -error-limit=0 to see all errors)
+	if grep -q 'too many errors emitted.*-error-limit=0' "${BASE}.err"; then
+	    LDFLAGS=-Wl,-error-limit=0 make_binary || :
+	fi
 	tools/mockup.sh < "${BASE}.err" >> "${BASE}.stubs"
 	# If there are no link errors, maybe compile fail for other reason?
 	if ! grep -F -q 'Generated stub for' "${BASE}.stubs"; then
 	    cat "${BASE}.err"
 	    exit 1
 	fi
-	sed -n 's,.*Generated stub for \(.*\) .*,\t\1,p' < "${BASE}.stubs"
+	sed -n 's,.*Generated stub for \(.*\) .*,	\1,p' < "${BASE}.stubs"
 	head -n "$START" "${BASE}.old" > "$FILE"
 	cat "${BASE}.stubs" >> "$FILE"
 	tail -n +"$END" "${BASE}.old" >> "$FILE"
